---
title: "Texas Outage"
description: "Analyzing the Effects of the Texas February 2021 Storm on the Houston metropolitan Area"

author:
  name: Javier Patrón
  affiliation: MEDS
  affiliation-url: http://ucsb-meds.github.io
date: 2022-10-26

format:
  html:
    code-fold: true
    code-summary: "Show code"
code-overflow: wrap
code-block-bg: true
code-block-border-left: "#6B5A75"
categories: [MEDS, Spatial, R]
citation: 
  url: https://github.com/javipatron
image: texas_outage.png
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

library(tidyverse)
library(tmap)
library(raster)
library(stars)

```

## Overview

"In February 2021, the state of Texas suffered a major power crisis, which came about as a result of three severe winter storms sweeping across the United States on February 10--11, 13--17, and 15--20."[^1] For more background, check out these [engineering](https://www.youtube.com/watch?v=08mwXICY4JM&ab_channel=PracticalEngineering) and [political](https://www.youtube.com/watch?v=Zcrsgdl_hP0&ab_channel=Vox) perspectives.

[^1]: Wikipedia. 2021. "2021 Texas power crisis." Last modified October 2, 2021. <https://en.wikipedia.org/wiki/2021_Texas_power_crisis>.

The tasks in this post are: - Estimating the number of homes in Houston that lost power as a result of the first two storms\
- Investigating if socioeconomic factors are predictors of communities recovery from a power outage

The analysis will be based on remotely-sensed night lights data, acquired from the [Visible Infrared Imaging Radiometer Suite (VIIRS)](https://en.wikipedia.org/wiki/Visible_Infrared_Imaging_Radiometer_Suite) onboard the Suomi satellite. In particular, you will use the VNP46A1 to detect differences in night lights before and after the storm to identify areas that lost electric power.

To determine the number of homes that lost power, you link (spatially join) these areas with [OpenStreetMap](https://www.openstreetmap.org/#map=4/38.01/-95.84) data on buildings and roads.

To investigate potential socioeconomic factors that influenced recovery, you will link your analysis with data from the US Census Bureau.

##### Spatial Skills:

-   Load vector/raster data\
-   Simple raster operations\
-   Simple vector operations\
-   Spatial joins

## Data

#### Night lights

Use NASA's Worldview to explore the data around the day of the storm. There are several days with too much cloud cover to be useful, but 2021-02-07 and 2021-02-16 provide two clear, contrasting images to visualize the extent of the power outage in Texas.

VIIRS data is distributed through NASA's [Level-1 and Atmospheric Archive & Distribution System Distributed Active Archive Center (LAADS DAAC)](https://ladsweb.modaps.eosdis.nasa.gov/). Many NASA Earth data products are distributed in 10x10 degree tiles in sinusoidal equal-area projection. Tiles are identified by their horizontal and vertical position in the grid. Houston lies on the border of tiles h08v05 and h08v06. We therefore need to download two tiles per date.

#### Roads

Typically highways account for a large portion of the night lights observable from space (see Google's [Earth at Night](https://earth.google.com/web/@27.44405464,-84.7693044,206.63660162a,8916361.52264659d,35y,0h,0t,0r/data=CiQSIhIgMGY3ZTJkYzdlOGExMTFlNjk5MGQ2ZjgxOGQ2OWE2ZTc)). To minimize falsely identifying areas with reduced traffic as areas without power, we will ignore areas near highways.

[OpenStreetMap (OSM)](https://planet.openstreetmap.org/) is a collaborative project which creates publicly available geographic data of the world. Ingesting this data into a database where it can be subsetted and processed is a large undertaking. Fortunately, third party companies redistribute OSM data. We used [Geofabrik's download sites](https://download.geofabrik.de/) to retrieve a shape file of all highways in Texas and prepared a Geopackage (`.gpkg` file) containing just the subset of roads that intersect the Houston metropolitan area. 

-   `gis_osm_roads_free_1.gpkg`

#### Houses

We can also obtain building data from OpenStreetMap. We again downloaded from Geofabrick and prepared a GeoPackage containing only houses in the Houston metropolitan area.\

-   `gis_osm_buildings_a_free_1.gpkg`

#### Socioeconomic

We cannot readily get socioeconomic information for every home, so instead we obtained data from the [U.S. Census Bureau's American Community Survey](https://www.census.gov/programs-surveys/acs) for census tracts in 2019. The *folder* `ACS_2019_5YR_TRACT_48.gdb` is an ArcGIS ["file geodatabase"](https://desktop.arcgis.com/en/arcmap/latest/manage-data/administer-file-gdbs/file-geodatabases.htm), a multi-file proprietary format that's roughly analogous to a GeoPackage file.\

The geodatabase contains a layer holding the geometry information, separate from the layers holding the ACS attributes. You have to combine the geometry with the attributes to get a feature layer that `sf` can use.

## Assignment

#### *Find locations of blackouts*

For improved computational efficiency and easier interoperability with `sf`, we will use the `stars` package for raster handling.\

```{r include=TRUE}

# Setting my filepaths
rootdir <- ("/Users/javipatron/Documents/MEDS/Courses/eds223")
datatif <- file.path(rootdir,"data","VNP46A1")
data <- file.path(rootdir,"data")

#Creating the names for each file
nightlight1 <- 'VNP46A1.A2021038.h08v05.001.2021039064328.tif' 
nightlight2 <- 'VNP46A1.A2021038.h08v06.001.2021039064329.tif' 
nightlight3 <- 'VNP46A1.A2021047.h08v05.001.2021048091106.tif'
nightlight4 <- 'VNP46A1.A2021047.h08v06.001.2021048091105.tif'
  
#Downloading the raster data to a star object
one <- read_stars(file.path(datatif, nightlight1))
two <- read_stars(file.path(datatif, nightlight2))
three <- read_stars(file.path(datatif,nightlight3))
four <- read_stars(file.path(datatif,nightlight4))

```

```{r include=TRUE}
#Combine tiles to have the full size
lights_off <- st_mosaic(one,two)
lights_on <- st_mosaic(three,four)

plot(lights_off, main= "Satellite Image of Houston Feb 7th")
plot(lights_on, main= "Satellite Image of Houston Feb 16th")

```

#### *Create a blackout mask*

-   Find the change in night lights intensity (presumably) caused by the storm\
    **Response: The change on the mean from the second date (All lights) goes from 13.86 down 12.13939, on the first date (Outrage)**
-   Reclassify the difference raster, assuming that any location that experienced a drop of more than 200 nW cm^-2^sr^-1^ experienced a blackout
-   Assign `NA` to all locations that experienced a drop of *less* than 200 nW cm^-2^sr^-1^

```{r include=TRUE}
#Create a new raster that has the difference of the values from the Feb 7th (Lights Off) raster, and the 16th (Lights On) raster. This will just have the difference of the attribute value on each pixel

raster_diff <-  lights_off - lights_on

plot(raster_diff, main= "Difference in light intensity from Feb 7th and Feb 16th")
```

```{r include=FALSE}
#The values that we see per pixel are the radiance in (nW / cm2 * sr)
#Reclassify the raster to only keep pixels that show a radiance change of 200 nW/ cm2*sr or above. All the other pixels will become a NA
raster_diff[raster_diff < 200] = NA

```

#### *Vectorize the mask*

-   Using `st_as_sf()` to vectorize the blackout mask
-   Fixing any invalid geometries by using `st_make_valid`

```{r message=FALSE}
# Converts the non-spatial star object (.tif) file to an sf object. An sf object will have an organizing structure that will have the geom column and the layer as attribues
blackout <- st_as_sf(raster_diff)
summary(blackout)
```

```{r include=FALSE}
#Fixes invalid geometries
st_make_valid(blackout)
```

#### *Crop the vectorized map to our region of interest.*

-   Define the Houston metropolitan area with the following coordinates
    -   (-96.5, 29), (-96.5, 30.5), (-94.5, 30.5), (-94.5, 29)
-   Turn these coordinates into a polygon using `st_polygon`
-   Convert the polygon into a simple feature collection using `st_sfc()` and assign a CRS
    -   hint: because we are using this polygon to crop the night lights data it needs the same CRS
-   Crop (spatially subset) the blackout mask to our region of interest 
-   Re-project the cropped blackout dataset to EPSG:3083 (NAD83 / Texas Centric Albers Equal Area)

```{r message=FALSE}

#Create vectors for the desired CRS
lon = c(-96.5, -96.5, -94.5, -94.5,-96.5)
lat = c(29, 30.5, 30.5, 29, 29)


#Create an array or matrix with those vectors 
coordinates_array <-cbind(lon,lat)

#Creating a polygon with the st_polygon function but the coordinates_array has to be in the form of a list so the st_polygon can read it.
houston_polygon <- st_polygon(list(coordinates_array))

# Create a simple feature geometry list column, and add coordinate reference system so you can "speak" the same language than your recent blackout object
houston_geom <- st_sfc(st_polygon(list(coordinates_array)), crs = 4326)

# Indexing or Cropping the blackout sf object with just the houston geometery polygon. 

houston_blackout_subset <- blackout[houston_geom,]

# Re-project the cropped blackout dataset with a new CRS (EPSG:3083) (NAD83 / Texas Centric Albers Equal Area)
houston_projection <- st_transform(houston_blackout_subset,"EPSG:3083")

```

```{r}
plot(houston_blackout_subset, main = "Blackout pixels in Houston")
```

#### *Exclude highways from blackout mask*

The roads geopackage includes data on roads other than highways. However, we can avoid reading in data we don't need by taking advantage of `st_read`'s ability to subset using a SQL query.

-   Define SQL query
-   Load just highway data from geopackage using `st_read`
-   Reproject data to EPSG:3083
-   Identify areas within 200m of all highways using `st_buffer`
-   Find areas that experienced blackouts that are further than 200m from a highway

```{r message= FALSE}
#Reading the data with format .gpkg
query <- "SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'"
highways <- st_read(file.path(data, "gis_osm_roads_free_1.gpkg"), query = query)

#Transform that new sf object with the CRS we have been using, so we stay in the same space.
highways_3083 <- st_transform(highways, "EPSG:3083")
```

```{r}
#Create a buffer that contains all the roads, including the 200 meters across the roads.
# BUT, to make a buffer object we need to first create a union of all those rows (highways), so we can use the st_buffer function...
highways_union <- st_union(highways_3083)
highways_buffer <- st_buffer(x = highways_union,
          dist = 200)

plot(highways_buffer, main = "Highways in Houston")

# Use the buffer to subtract those entire pixels or "rows" from the houston projection sf object.
houston_out <- houston_projection[highways_buffer, op = st_disjoint]
plot(houston_out,
     main= "Houston Without the Roadlights")

```

#### *Find homes impacted by blackouts*

-   Load buildings dataset using `st_read` and the following SQL query to select only residential buildings
-   hint: reproject data to EPSG:3083

```{r message=FALSE}
#Read the data
query2 <- "SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL) OR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')"

buildings <- st_read(file.path(data, "gis_osm_buildings_a_free_1.gpkg"), query = query2)

```

#### *Find homes in blackout areas*

-   Filter to homes within blackout areas.

    *Tip: You can use \[ \] option to subtract those geometries from the building sf object that do not correspond to the Houston area. Or you can use the st_filter.*

-   Count number of impacted homes.

    *Tip: The total number of impacted houses when using st_filter or \[ \] is 139,148. This could vary depending on how the st_filter considers the limits and borders of the geometries. The default method when using st_filter is st_intersects.*

```{r, include = FALSE}
#Checking if both sf objects are the same kind for a quick filter or join
class(houston_out)
class(buildings)
buildings

#The new buildings sf doesn´t have the same CRS, so you need to use st_transform to make that change
buildings_crs <- st_transform(buildings, "EPSG:3083")

buildings_crs

#Filter the Houston_out sf object with the matching location of buildings that are in houston. In other words you are using the houston_out sf to see the locations (geometries) that have no power and then use the building sf object to add information to those places 
homes_blackout_join <- st_filter(buildings_crs, houston_out)

dim(homes_blackout_join)
class(homes_blackout_join)
```

```{r}
#Count number of houses
dim(homes_blackout_join)[1]

```

#### *Investigate socioeconomic factors*

Load ACS data

-   Use `st_read()` to load the geodatabase layers
-   Geometries are stored in the `ACS_2019_5YR_TRACT_48_TEXAS` layer
-   Income data is stored in the `X19_INCOME` layer
-   Select the median income field `B19013e1`
-   hint: reproject data to EPSG:3083\

```{r}
#Read the data and understand the data layers
st_layers(file.path(data, "ACS_2019_5YR_TRACT_48_TEXAS.gdb"))
```

```{r include = FALSE, warning = FALSE}
#Read the data that contains the income data, by only downloading the layer of X19_INCOME
texas_income <- st_read(file.path(data, "ACS_2019_5YR_TRACT_48_TEXAS.gdb"), layer = "X19_INCOME")

#Select only the columns of interest and rename the weird name of B19013e1
texas_income <- texas_income |> 
  dplyr::select("GEOID", "B19013e1") |> 
  rename("income_median" = "B19013e1") |> 
  rename("GEOID_Data" = "GEOID")

#Read the other layer that contains the geometries
texas_geom <- st_read(file.path(data, "ACS_2019_5YR_TRACT_48_TEXAS.gdb"), layer = "ACS_2019_5YR_TRACT_48_TEXAS") |> st_transform(crs = "EPSG:3083")

```

#### *Determine which census tracts experienced blackouts.*

-   Join the income data to the census tract geometries
-   hint: make sure to join by geometry ID
-   Spatially join census tract data with buildings determined to be impacted by blackouts
-   Find which census tracts had blackouts

```{r include=TRUE}
#Create a big sf that has the income information and its geometry
income_geom <- left_join(texas_geom, texas_income, by = "GEOID_Data")

#Create an new sf that adds the income information to just the blackout sf object that we previously had. In this step I learned that if you use st_join will give you a different number and result than st_filter or [ ]

#blackout_income_join <- st_join(homes_blackout_join, income_geom)
blackout_join <- income_geom[homes_blackout_join,]

#Print those Census Tracts a had blackouts. Im printing the number and the name
length(unique(blackout_join$NAMELSAD))
#unique(blackout_join$NAMELSAD)

```

#### *Compare incomes of impacted tracts to unimpacted tracts.*

-   Create a map of median income by census tract, designating which tracts had blackouts
-   Plot the distribution of income in impacted and unimpacted tracts
-   Write approx. 100 words summarizing your results and discussing any limitations to this study

```{r}
#Creating a list of tracts and counties that were affected by the blackout
blackout_tracts <- unique(blackout_join$TRACTCE)
blackout_counties <- unique(blackout_join$COUNTYFP)

#Creating a Data Frames that includes only the rows that have the county affected by using the geom from blackout_tracts. One with the Counties and the other one with the Tracts.
tracts_affected <- income_geom |> 
  filter(TRACTCE %in% blackout_tracts)

counties_affected <- income_geom |> 
  filter(COUNTYFP %in% blackout_counties)

#Create a map were the base is the counties of Houston, then fill the color with the income_median column we created with "B19013e1", and then highlight the counties that were had building affected from our dataset
map <- tm_shape(counties_affected) +
  tm_fill(col = "income_median", palette = "BrBG") +
  tm_borders() +
  tm_shape(blackout_join) +
  tm_fill(col = "pink", alpha= 0.3) +
  tm_layout(legend.outside = T,
            main.title = "Median Income by Census Tract",
            frame = T,
            title = "*Affected areas in pink*") +
  tm_compass(type = "arrow", 
             position = c("left", "top")) +
  tm_scale_bar()

tmap_mode("view")

map

```

```{r}
#Finding the difference in income between the affected tracts and unaffected.

#First we need create two sf data frames to categorize if they were impacted or not by the blackout

not_impacted <- anti_join(tracts_affected , as.data.frame(blackout_join)) |> 
  mutate(impacted = "no")

impacted <- blackout_join |> 
  mutate(impacted = "yes")

#Second, we need to create a new data frame were the "key" is the same column name, so we will have which tracts were impacted and which ones were not.
combination <- rbind(not_impacted, impacted) |> 
  dplyr::select(income_median, impacted)

summary(combination)

#Third, create a histogram and a box plot of that new column and analyse the income median 

ggplot(combination, aes(x = income_median, fill= impacted)) +
  geom_histogram()  +
    labs(title = "Distribution of Income",
       x = "Income Median",
       y = "Count") +
   theme(
    panel.background = element_rect(fill = "gray91"),
    panel.grid.major = element_line(colour = "grey70", size = 0.2),
    panel.grid.minor = element_line(color = "gray88"))


ggplot(combination, aes(y = income_median, fill = impacted)) +
  geom_boxplot() +
  labs(title = "Blackout Impact by Income",
       x = "Impacted",
       y = "Income Median") +
   theme(
    panel.background = element_rect(fill = "gray91"),
    panel.grid.major = element_line(colour = "grey70", size = 0.2),
    panel.grid.minor = element_line(color = "gray88"))

# Statistical comparison
summary(impacted$income_median)
summary(not_impacted$income_median)
t.test(impacted$income_median, not_impacted$income_median)

```

## Summary

The results show a high number people affected by this winter storm. According to the data, almost 140,000 houses/ building were impacted within the designated area of Houston showing an almost equal impact between high income census tracts and low income census tracts. Looking in detail at the plots, the distribution plot (Histogram), is a right skew, showing a higher density around the low income median, nevertheless in the `summary` results you can see that the median income for the not impacted census tracts is lower that the impacted census tract, showing that the effect of the storm affected almost equally everyone in the zone, regardless of the income. It is important to consider that we are not weighting each tract by impacted houses. Which could affect final results, and conclusions.
